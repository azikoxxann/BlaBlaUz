import os
import telebot
import sqlite3
import re
import time
import threading
from flask import Flask

# === 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask (—á—Ç–æ–±—ã Render –Ω–µ —Ç—Ä–µ–±–æ–≤–∞–ª –ø–æ—Ä—Ç) ===
app = Flask(__name__)

@app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

def run_flask():
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)

# === 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ ===
API_TOKEN = os.getenv("API_TOKEN")  # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
bot = telebot.TeleBot(API_TOKEN)

# === 3. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite (–±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏) ===
def get_db_connection():
    return sqlite3.connect("rides.db", check_same_thread=False)

def init_db():
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute('''CREATE TABLE IF NOT EXISTS rides (
                            id INTEGER PRIMARY KEY AUTOINCREMENT,
                            driver_id INTEGER,
                            phone TEXT,
                            from_city TEXT,
                            to_city TEXT,
                            created_at INTEGER)''')
        cursor.execute('''CREATE TABLE IF NOT EXISTS users (
                            user_id INTEGER PRIMARY KEY,
                            phone TEXT)''')
        conn.commit()

# === 4. –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã ===
init_db()

# === 5. –ö–æ–º–∞–Ω–¥–∞ /start ===
@bot.message_handler(commands=['start'])
def start_cmd(message):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT phone FROM users WHERE user_id=?", (message.from_user.id,))
        user = cursor.fetchone()

    if user:
        show_main_menu(message)
    else:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–≤ —Ñ–æ—Ä–º–∞—Ç–µ +998xxxxxxxxx):")
        bot.register_next_step_handler(message, save_user_phone)

def save_user_phone(message):
    phone = message.text.strip()
    if not re.match(r"^\+998\d{9}$", phone):
        bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ +998xxxxxxxxx:")
        bot.register_next_step_handler(message, save_user_phone)
        return

    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("INSERT INTO users (user_id, phone) VALUES (?, ?)", (message.from_user.id, phone))
        conn.commit()

    bot.send_message(message.chat.id, "‚úÖ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
    show_main_menu(message)

def show_main_menu(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üöó –í–æ–¥–∏—Ç–µ–ª—å", "üöå –ü–∞—Å—Å–∞–∂–∏—Ä")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ç–æ –≤—ã:", reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text == "üöó –í–æ–¥–∏—Ç–µ–ª—å")
def driver_choice(message):
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add("üöó –°–æ–∑–¥–∞—Ç—å –ø–æ–µ–∑–¥–∫—É", "‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–µ–∑–¥–∫—É")
    bot.send_message(message.chat.id, "–í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –ø–æ–µ–∑–¥–∫—É.", reply_markup=keyboard)

@bot.message_handler(func=lambda message: message.text == "üöó –°–æ–∑–¥–∞—Ç—å –ø–æ–µ–∑–¥–∫—É")
def create_ride(message):
    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("SELECT COUNT(*) FROM rides WHERE driver_id=?", (message.from_user.id,))
        ride_count = cursor.fetchone()[0]

    if ride_count >= 2:
        bot.send_message(message.chat.id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –±–æ–ª–µ–µ –¥–≤—É—Ö –ø–æ–µ–∑–¥–æ–∫.")
        return

    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for city in ["–¢–∞—à–∫–µ–Ω—Ç", "–°–∞–º–∞—Ä–∫–∞–Ω–¥", "–ë—É—Ö–∞—Ä–∞"]:  # –û–≥—Ä–∞–Ω–∏—á–∏–ª —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        markup.add(city)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:", reply_markup=markup)
    bot.register_next_step_handler(message, get_to_city)

def get_to_city(message):
    from_city = message.text
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    for city in ["–¢–∞—à–∫–µ–Ω—Ç", "–°–∞–º–∞—Ä–∫–∞–Ω–¥", "–ë—É—Ö–∞—Ä–∞"]:
        if city != from_city:
            markup.add(city)
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:", reply_markup=markup)
    bot.register_next_step_handler(message, save_ride, from_city)

def save_ride(message, from_city):
    to_city = message.text
    created_at = int(time.time())

    with get_db_connection() as conn:
        cursor = conn.cursor()
        cursor.execute("INSERT INTO rides (driver_id, phone, from_city, to_city, created_at) VALUES (?, ?, ?, ?, ?)",
                       (message.from_user.id, "–ù–æ–º–µ—Ä —Å–∫—Ä—ã—Ç", from_city, to_city, created_at))
        conn.commit()

    bot.send_message(message.chat.id, "üöó –í–∞—à–∞ –ø–æ–µ–∑–¥–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!")
    show_main_menu(message)

# === 6. –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –ø–æ–µ–∑–¥–æ–∫ (–≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ) ===
def delete_old_rides():
    while True:
        with get_db_connection() as conn:
            cursor = conn.cursor()
            cursor.execute("DELETE FROM rides WHERE strftime('%s', 'now') - created_at >= 86400")
            conn.commit()
        time.sleep(3600)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —á–∞—Å

# === 7. –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ ===
threading.Thread(target=delete_old_rides, daemon=True).start()

# === 8. –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ Flask –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö ===
if __name__ == "__main__":
    flask_thread = threading.Thread(target=run_flask)
    flask_thread.start()

    try:
        bot.polling(none_stop=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {str(e)}")
